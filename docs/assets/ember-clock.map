{"version":3,"sources":["vendor/ember-cli/app-prefix.js","ember-clock/app.js","ember-clock/components/welcome-page.js","ember-clock/controllers/clock.js","ember-clock/controllers/stopwatch.js","ember-clock/controllers/timer.js","ember-clock/helpers/app-version.js","ember-clock/helpers/pad-string.js","ember-clock/helpers/pluralize.js","ember-clock/helpers/singularize.js","ember-clock/initializers/app-version.js","ember-clock/initializers/container-debug-adapter.js","ember-clock/initializers/ember-data.js","ember-clock/initializers/export-application-global.js","ember-clock/instance-initializers/ember-data.js","ember-clock/resolver.js","ember-clock/router.js","ember-clock/routes/clock.js","ember-clock/routes/index.js","ember-clock/routes/stopwatch.js","ember-clock/routes/timer.js","ember-clock/services/ajax.js","ember-clock/templates/application.js","ember-clock/templates/clock.js","ember-clock/templates/index.js","ember-clock/templates/stopwatch.js","ember-clock/templates/timer.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n\n\n","define('ember-clock/app', ['exports', 'ember-clock/resolver', 'ember-load-initializers', 'ember-clock/config/environment'], function (exports, _resolver, _emberLoadInitializers, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const App = Ember.Application.extend({\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix,\n    Resolver: _resolver.default\n  });\n\n  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);\n\n  exports.default = App;\n});","define('ember-clock/components/welcome-page', ['exports', 'ember-welcome-page/components/welcome-page'], function (exports, _welcomePage) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _welcomePage.default;\n    }\n  });\n});","define('ember-clock/controllers/clock', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    let timer;\n\n    exports.default = Ember.Controller.extend({\n        init() {\n            this._super(...arguments);\n            this.datetime = new Date();\n            timer = setInterval(() => {\n                this.set('datetime', new Date());\n            }, 1000);\n        },\n        year: Ember.computed('datetime', function () {\n            return this.get('datetime').getFullYear();\n        }),\n        month: Ember.computed('datetime', function () {\n            return this.get('datetime').getMonth() + 1;\n        }),\n        day: Ember.computed('datetime', function () {\n            return this.get('datetime').getDate();\n        }),\n        hours: Ember.computed('datetime', function () {\n            return this.get('datetime').getHours();\n        }),\n        minutes: Ember.computed('datetime', function () {\n            return this.get('datetime').getMinutes();\n        }),\n        seconds: Ember.computed('datetime', function () {\n            return this.get('datetime').getSeconds();\n        }),\n        willDestroy() {\n            clearInterval(timer);\n            timer = null;\n        }\n    });\n});","define('ember-clock/controllers/stopwatch', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    let timer;\n    let lastUpdate = new Date().getTime();\n\n    exports.default = Ember.Controller.extend({\n        actions: {\n            start() {\n                if (timer != null) return;\n                this.set('isStopped', false);\n\n                lastUpdate = new Date().getTime();\n\n                timer = setInterval(() => {\n                    let now = new Date().getTime();\n                    let diff = now - lastUpdate;\n\n                    lastUpdate = now;\n                    this.set('totalTime', this.get('totalTime') + diff);\n\n                    let tt = this.get('totalTime');\n                    let hours = Math.floor(tt / (1000 * 60 * 60));\n                    let minutes = Math.floor((tt - hours * 1000 * 60 * 60) / (1000 * 60));\n                    let seconds = Math.floor((tt - hours * 1000 * 60 * 60 - minutes * 1000 * 60) / 1000);\n\n                    this.set('hours', hours);\n                    this.set('minutes', minutes);\n                    this.set('seconds', seconds);\n                }, 1000);\n            },\n            reset() {\n                lastUpdate = new Date().getTime();\n                this.set('totalTime', 0);\n                this.set('hours', 0);\n                this.set('minutes', 0);\n                this.set('seconds', 0);\n            },\n            stop() {\n                clearInterval(timer);\n                timer = null;\n                this.set('isStopped', true);\n            }\n        },\n        isStopped: true,\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n        totalTime: 0\n    });\n});","define('ember-clock/controllers/timer', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n\n    let timer;\n    let lastUpdate = new Date().getTime();\n\n    exports.default = Ember.Controller.extend({\n        actions: {\n            hourInc() {\n                this.set('hours', Math.min(this.get('hours') + 1, 99));\n            },\n            minuteInc() {\n                this.set('minutes', Math.min(this.get('minutes') + 1, 99) % 60);\n            },\n            secondInc() {\n                this.set('seconds', Math.min(this.get('seconds') + 1, 99) % 60);\n            },\n            hourDec() {\n                this.set('hours', Math.max(this.get('hours') - 1, 0) % 99);\n            },\n            minuteDec() {\n                this.set('minutes', Math.max(this.get('minutes') - 1, 0) % 60);\n            },\n            secondDec() {\n                this.set('seconds', Math.max(this.get('seconds') - 1, 0) % 60);\n            },\n            start() {\n                if (timer != null || this.get('hours') == 0 && this.get('minutes') == 0 && this.get('seconds') == 0) return;\n                this.set('isStopped', false);\n\n                lastUpdate = new Date().getTime();\n                this.set('timeRemaining', this.get('hours') * 1000 * 60 * 60 + this.get('minutes') * 1000 * 60 + this.get('seconds') * 1000 + 500);\n\n                timer = setInterval(() => {\n                    if (this.get('timeRemaining') <= 0) {\n                        clearInterval(timer);\n                        timer = null;\n                        this.set('isStopped', true);\n                        this.set('timeRemaining', 0);\n                        this.set('hours', 0);\n                        this.set('minutes', 0);\n                        this.set('seconds', 0);\n                    } else {\n                        let now = new Date().getTime();\n                        let diff = now - lastUpdate;\n                        let tr = this.get('timeRemaining') - diff;\n                        lastUpdate = now;\n                        if (tr < 500) {\n                            this.set('isStopped', true);\n                            this.set('timeRemaining', 0);\n                            this.set('hours', 0);\n                            this.set('minutes', 0);\n                            this.set('seconds', 0);\n                            clearInterval(timer);\n                            timer = null;\n                        } else {\n                            this.set('timeRemaining', tr);\n                            let hours = Math.floor(tr / (1000 * 60 * 60));\n                            let minutes = Math.floor((tr - hours * 1000 * 60 * 60) / (1000 * 60));\n                            let seconds = Math.floor((tr - hours * 1000 * 60 * 60 - minutes * 1000 * 60) / 1000);\n\n                            this.set('hours', hours);\n                            this.set('minutes', minutes);\n                            this.set('seconds', seconds);\n                        }\n                    }\n                }, 1000);\n            },\n            reset() {\n                this.set('isStopped', true);\n                this.set('timeRemaining', 0);\n                this.set('hours', 0);\n                this.set('minutes', 0);\n                this.set('seconds', 0);\n            },\n            stop() {\n                clearInterval(timer);\n                timer = null;\n                this.set('isStopped', true);\n            }\n        },\n        isStopped: true,\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n        timeRemaining: 0\n    });\n});","define('ember-clock/helpers/app-version', ['exports', 'ember-clock/config/environment', 'ember-cli-app-version/utils/regexp'], function (exports, _environment, _regexp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.appVersion = appVersion;\n  function appVersion(_, hash = {}) {\n    const version = _environment.default.APP.version;\n    // e.g. 1.0.0-alpha.1+4jds75hf\n\n    // Allow use of 'hideSha' and 'hideVersion' For backwards compatibility\n    let versionOnly = hash.versionOnly || hash.hideSha;\n    let shaOnly = hash.shaOnly || hash.hideVersion;\n\n    let match = null;\n\n    if (versionOnly) {\n      if (hash.showExtended) {\n        match = version.match(_regexp.versionExtendedRegExp); // 1.0.0-alpha.1\n      }\n      // Fallback to just version\n      if (!match) {\n        match = version.match(_regexp.versionRegExp); // 1.0.0\n      }\n    }\n\n    if (shaOnly) {\n      match = version.match(_regexp.shaRegExp); // 4jds75hf\n    }\n\n    return match ? match[0] : version;\n  }\n\n  exports.default = Ember.Helper.helper(appVersion);\n});","define('ember-clock/helpers/pad-string', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.padString = padString;\n  function padString([value, length, padStr]) {\n    return String(value).padStart(length, padStr);\n  }\n\n  exports.default = Ember.Helper.helper(padString);\n});","define('ember-clock/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _pluralize) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _pluralize.default;\n});","define('ember-clock/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _singularize) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _singularize.default;\n});","define('ember-clock/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'ember-clock/config/environment'], function (exports, _initializerFactory, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  let name, version;\n  if (_environment.default.APP) {\n    name = _environment.default.APP.name;\n    version = _environment.default.APP.version;\n  }\n\n  exports.default = {\n    name: 'App Version',\n    initialize: (0, _initializerFactory.default)(name, version)\n  };\n});","define('ember-clock/initializers/container-debug-adapter', ['exports', 'ember-resolver/resolvers/classic/container-debug-adapter'], function (exports, _containerDebugAdapter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'container-debug-adapter',\n\n    initialize() {\n      let app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _containerDebugAdapter.default);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('ember-clock/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data'], function (exports, _setupContainer) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'ember-data',\n    initialize: _setupContainer.default\n  };\n});","define('ember-clock/initializers/export-application-global', ['exports', 'ember-clock/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initialize = initialize;\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_environment.default.exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _environment.default.exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember.String.classify(_environment.default.modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function () {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports.default = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define(\"ember-clock/instance-initializers/ember-data\", [\"exports\", \"ember-data/initialize-store-service\"], function (exports, _initializeStoreService) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: \"ember-data\",\n    initialize: _initializeStoreService.default\n  };\n});","define('ember-clock/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberResolver.default;\n});","define('ember-clock/router', ['exports', 'ember-clock/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const Router = Ember.Router.extend({\n    location: _environment.default.locationType,\n    rootURL: _environment.default.rootURL\n  });\n\n  Router.map(function () {\n    this.route('clock');\n    this.route('stopwatch');\n    this.route('timer');\n  });\n\n  exports.default = Router;\n});","define('ember-clock/routes/clock', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('ember-clock/routes/index', ['exports'], function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    exports.default = Ember.Route.extend({\n        redirect() {\n            this.transitionTo('clock');\n        }\n    });\n});","define('ember-clock/routes/stopwatch', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('ember-clock/routes/timer', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('ember-clock/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _ajax) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _ajax.default;\n    }\n  });\n});","define(\"ember-clock/templates/application\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"sNP8yIey\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"ul\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"li\\\"],[8],[4,\\\"link-to\\\",[\\\"clock\\\"],null,{\\\"statements\\\":[[0,\\\"Clock\\\"]],\\\"parameters\\\":[]},null],[9],[0,\\\"\\\\n    \\\"],[6,\\\"li\\\"],[8],[4,\\\"link-to\\\",[\\\"timer\\\"],null,{\\\"statements\\\":[[0,\\\"Timer\\\"]],\\\"parameters\\\":[]},null],[9],[0,\\\"\\\\n    \\\"],[6,\\\"li\\\"],[8],[4,\\\"link-to\\\",[\\\"stopwatch\\\"],null,{\\\"statements\\\":[[0,\\\"Stopwatch\\\"]],\\\"parameters\\\":[]},null],[9],[0,\\\"\\\\n    \\\"],[6,\\\"li\\\"],[8],[6,\\\"a\\\"],[10,\\\"style\\\",\\\"display: inline; background-color: #0c2540;\\\"],[10,\\\"href\\\",\\\"http://www.github.com/JaredLGillespie/ember-clock\\\"],[8],[6,\\\"img\\\"],[10,\\\"class\\\",\\\"github\\\"],[10,\\\"src\\\",\\\"Octicons-mark-github.svg\\\"],[8],[9],[9],[9],[0,\\\"\\\\n\\\"],[9],[0,\\\"\\\\n\\\\n\\\"],[1,[20,\\\"outlet\\\"],false],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"div\\\"],[10,\\\"class\\\",\\\"footer\\\"],[8],[0,\\\"\\\\n    Made by me (Jared Gillespie)\\\\n\\\"],[9]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"ember-clock/templates/application.hbs\" } });\n});","define(\"ember-clock/templates/clock\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"YLUoONir\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"div\\\"],[10,\\\"id\\\",\\\"clock\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"p\\\"],[10,\\\"class\\\",\\\"date\\\"],[8],[1,[26,\\\"pad-string\\\",[[22,[\\\"year\\\"]],4,\\\"0\\\"],null],false],[0,\\\"-\\\"],[1,[26,\\\"pad-string\\\",[[22,[\\\"month\\\"]],2,\\\"0\\\"],null],false],[0,\\\"-\\\"],[1,[26,\\\"pad-string\\\",[[22,[\\\"day\\\"]],2,\\\"0\\\"],null],false],[9],[0,\\\"\\\\n    \\\"],[6,\\\"p\\\"],[10,\\\"class\\\",\\\"time\\\"],[8],[1,[26,\\\"pad-string\\\",[[22,[\\\"hours\\\"]],2,\\\"0\\\"],null],false],[0,\\\":\\\"],[1,[26,\\\"pad-string\\\",[[22,[\\\"minutes\\\"]],2,\\\"0\\\"],null],false],[0,\\\":\\\"],[1,[26,\\\"pad-string\\\",[[22,[\\\"seconds\\\"]],2,\\\"0\\\"],null],false],[9],[0,\\\"\\\\n\\\"],[9]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"ember-clock/templates/clock.hbs\" } });\n});","define(\"ember-clock/templates/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"1Un3Hu+p\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[20,\\\"outlet\\\"],false]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"ember-clock/templates/index.hbs\" } });\n});","define(\"ember-clock/templates/stopwatch\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"6mthxl3U\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"div\\\"],[10,\\\"id\\\",\\\"clock\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"p\\\"],[11,\\\"class\\\",[27,[\\\"time \\\",[26,\\\"if\\\",[[22,[\\\"isStopped\\\"]],\\\"stopped\\\"],null]]]],[8],[1,[26,\\\"pad-string\\\",[[22,[\\\"hours\\\"]],2,\\\"0\\\"],null],false],[0,\\\":\\\"],[1,[26,\\\"pad-string\\\",[[22,[\\\"minutes\\\"]],2,\\\"0\\\"],null],false],[0,\\\":\\\"],[1,[26,\\\"pad-string\\\",[[22,[\\\"seconds\\\"]],2,\\\"0\\\"],null],false],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,[\\\"isStopped\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[6,\\\"button\\\"],[10,\\\"class\\\",\\\"start\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"start\\\"]],[8],[0,\\\"Start\\\"],[9],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"        \\\"],[6,\\\"button\\\"],[10,\\\"class\\\",\\\"stop\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"stop\\\"]],[8],[0,\\\"Stop\\\"],[9],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[6,\\\"button\\\"],[10,\\\"class\\\",\\\"reset\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"reset\\\"]],[8],[0,\\\"Reset\\\"],[9],[0,\\\"\\\\n\\\"],[9]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"ember-clock/templates/stopwatch.hbs\" } });\n});","define(\"ember-clock/templates/timer\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"/Yhf9pHF\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"div\\\"],[10,\\\"id\\\",\\\"clock\\\"],[8],[0,\\\"\\\\n    \\\"],[6,\\\"p\\\"],[11,\\\"class\\\",[27,[\\\"time \\\",[26,\\\"if\\\",[[22,[\\\"isStopped\\\"]],\\\"stopped\\\"],null]]]],[8],[1,[26,\\\"pad-string\\\",[[22,[\\\"hours\\\"]],2,\\\"0\\\"],null],false],[0,\\\":\\\"],[1,[26,\\\"pad-string\\\",[[22,[\\\"minutes\\\"]],2,\\\"0\\\"],null],false],[0,\\\":\\\"],[1,[26,\\\"pad-string\\\",[[22,[\\\"seconds\\\"]],2,\\\"0\\\"],null],false],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,[\\\"isStopped\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[6,\\\"button\\\"],[10,\\\"class\\\",\\\"start\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"start\\\"]],[8],[0,\\\"Start\\\"],[9],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"        \\\"],[6,\\\"button\\\"],[10,\\\"class\\\",\\\"stop\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"stop\\\"]],[8],[0,\\\"Stop\\\"],[9],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"    \\\"],[6,\\\"button\\\"],[10,\\\"class\\\",\\\"reset\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"reset\\\"]],[8],[0,\\\"Reset\\\"],[9],[0,\\\"\\\\n    \\\"],[6,\\\"div\\\"],[10,\\\"class\\\",\\\"setting-box\\\"],[8],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[22,[\\\"isStopped\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[6,\\\"p\\\"],[8],[0,\\\"Hour\\\"],[6,\\\"button\\\"],[10,\\\"class\\\",\\\"timer-setting\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"hourInc\\\"]],[8],[0,\\\"+\\\"],[9],[6,\\\"button\\\"],[10,\\\"class\\\",\\\"timer-setting\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"hourDec\\\"]],[8],[0,\\\"-\\\"],[9],[9],[0,\\\"\\\\n        \\\"],[6,\\\"p\\\"],[8],[0,\\\"Minute\\\"],[6,\\\"button\\\"],[10,\\\"class\\\",\\\"timer-setting\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"minuteInc\\\"]],[8],[0,\\\"+\\\"],[9],[6,\\\"button\\\"],[10,\\\"class\\\",\\\"timer-setting\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"minuteDec\\\"]],[8],[0,\\\"-\\\"],[9],[9],[0,\\\"\\\\n        \\\"],[6,\\\"p\\\"],[8],[0,\\\"Second\\\"],[6,\\\"button\\\"],[10,\\\"class\\\",\\\"timer-setting\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"secondInc\\\"]],[8],[0,\\\"+\\\"],[9],[6,\\\"button\\\"],[10,\\\"class\\\",\\\"timer-setting\\\"],[3,\\\"action\\\",[[21,0,[]],\\\"secondDec\\\"]],[8],[0,\\\"-\\\"],[9],[9],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[9],[0,\\\"\\\\n\\\"],[9]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"ember-clock/templates/timer.hbs\" } });\n});","\n","define('ember-clock/config/environment', [], function() {\n  var prefix = 'ember-clock';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","if (!runningTests) {\n  require(\"ember-clock/app\")[\"default\"].create({\"name\":\"ember-clock\",\"version\":\"0.0.0+b25bc85d\"});\n}\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;","file":"ember-clock.js"}